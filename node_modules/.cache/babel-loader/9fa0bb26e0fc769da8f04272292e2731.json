{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\FARZAN\\\\Desktop\\\\my project\\\\simple\\\\src\\\\components\\\\post\\\\Post.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport './post.css';\nimport PropTypes from 'prop-types';\nimport { Rating } from '@mui/material';\nimport { Avatar } from '@mui/material';\nimport { MoreVert } from '@mui/icons-material';\nimport SentimentVeryDissatisfiedIcon from '@mui/icons-material/SentimentVeryDissatisfied';\nimport SentimentDissatisfiedIcon from '@mui/icons-material/SentimentDissatisfied';\nimport SentimentSatisfiedIcon from '@mui/icons-material/SentimentSatisfied';\nimport SentimentSatisfiedAltIcon from '@mui/icons-material/SentimentSatisfiedAltOutlined';\nimport SentimentVerySatisfiedIcon from '@mui/icons-material/SentimentVerySatisfied';\nimport CloseIcon from '@mui/icons-material/Close';\nimport { Users } from '../../dummyData';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Post(_ref) {\n  _s();\n\n  var _users$Users$filter$, _users$Users$filter$2, _users$Users$filter$3, _users$Users$filter$4;\n\n  let {\n    post\n  } = _ref;\n  const box = document.getElementById(\"commentboxed\");\n  const [opencomment, setOpenComment] = useState(false);\n  const [comment, setComment] = useState(\"\");\n  const [loading, setLoading] = useState(true);\n  const customIcons = {\n    1: {\n      icon: /*#__PURE__*/_jsxDEV(SentimentVeryDissatisfiedIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this),\n      label: 'Very Dissatisfied'\n    },\n    2: {\n      icon: /*#__PURE__*/_jsxDEV(SentimentDissatisfiedIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this),\n      label: 'Dissatisfied'\n    },\n    3: {\n      icon: /*#__PURE__*/_jsxDEV(SentimentSatisfiedIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this),\n      label: 'Neutral'\n    },\n    4: {\n      icon: /*#__PURE__*/_jsxDEV(SentimentSatisfiedAltIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this),\n      label: 'Satisfied'\n    },\n    5: {\n      icon: /*#__PURE__*/_jsxDEV(SentimentVerySatisfiedIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this),\n      label: 'Very Satisfied'\n    }\n  };\n\n  function IconContainer(props) {\n    const {\n      value,\n      ...others\n    } = props;\n    return /*#__PURE__*/_jsxDEV(\"span\", { ...others,\n      children: customIcons[value].icon\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 18\n    }, this);\n  }\n\n  IconContainer.propTypes = {\n    value: PropTypes.number.isRequired\n  };\n\n  function commentBox() {\n    setOpenComment(!opencomment);\n  }\n\n  function addComment(e) {\n    if (e.key === 'Enter') {\n      post.comment = post.comment + 1;\n    }\n  }\n\n  const [like, setLike] = useState(post.like);\n  const [isLiked, setIsLiked] = useState(false);\n  const [users, setUsers] = useState(null);\n\n  const clickHandler = () => (setLike(isLiked ? like - 1 : like + 1), setIsLiked(!isLiked));\n\n  useEffect(() => {\n    fetch('https://backend-api.farzanvm.workers.dev/api/posts').then(res => {\n      return res.json();\n    }).then(data => {\n      setUsers(data);\n      setLoading(false);\n    });\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 24\n  }, this);\n  return users && /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"postWrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"postTop\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"postTopLeft\",\n          children: [/*#__PURE__*/_jsxDEV(Avatar, {\n            src: (_users$Users$filter$ = users.Users.filter(u => u.id === post.userId)[0]) === null || _users$Users$filter$ === void 0 ? void 0 : _users$Users$filter$.ProfilePicture\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"postUsername\",\n            children: (_users$Users$filter$2 = users.Users.filter(u => u.id === post.userId)[0]) === null || _users$Users$filter$2 === void 0 ? void 0 : _users$Users$filter$2.Username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"postTime\",\n            children: post.date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"postTopRight\",\n          children: /*#__PURE__*/_jsxDEV(MoreVert, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"postCenter\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"spaceText\",\n          children: post.desc\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"postImg\",\n          src: post.photo,\n          alt: \"one_piece\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"postBottom\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"postBottomLeft\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"likeIcon\",\n            src: \"/assets/images/like.png\",\n            onClick: clickHandler,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"likeIcon\",\n            src: \"/assets/images/heart.png\",\n            onClick: clickHandler,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"postlikeCounter\",\n            children: [like, \" people liked\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"buttonComment\",\n            onClick: commentBox,\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \" Add comment\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 80\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"postIcons\",\n          children: /*#__PURE__*/_jsxDEV(Rating, {\n            name: \"highlight-selected-only\",\n            defaultValue: 2,\n            IconContainerComponent: IconContainer,\n            sx: {\n              fontSize: 140\n            },\n            highlightSelectedOnly: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"postBottomRight\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"postCommentText\",\n            children: [post.comment, \" comments\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this), opencomment && /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"commentboxed\",\n        className: \"commentBox\",\n        children: [/*#__PURE__*/_jsxDEV(Avatar, {\n          src: (_users$Users$filter$3 = users.Users.filter(u => u.id === 1)[0]) === null || _users$Users$filter$3 === void 0 ? void 0 : _users$Users$filter$3.ProfilePicture\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"postUsername\",\n          children: (_users$Users$filter$4 = users.Users.filter(u => u.id === 1)[0]) === null || _users$Users$filter$4 === void 0 ? void 0 : _users$Users$filter$4.Username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"postCommentArea\",\n          value: comment,\n          onChange: e => setComment(e.target.value),\n          onKeyDown: e => addComment(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 34\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Post, \"CyurqddQWRAKqbymT5jIDGmB+xU=\");\n\n_c = Post;\nexport default Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["C:/Users/FARZAN/Desktop/my project/simple/src/components/post/Post.js"],"names":["React","PropTypes","Rating","Avatar","MoreVert","SentimentVeryDissatisfiedIcon","SentimentDissatisfiedIcon","SentimentSatisfiedIcon","SentimentSatisfiedAltIcon","SentimentVerySatisfiedIcon","CloseIcon","Users","useState","useEffect","Post","post","box","document","getElementById","opencomment","setOpenComment","comment","setComment","loading","setLoading","customIcons","icon","label","IconContainer","props","value","others","propTypes","number","isRequired","commentBox","addComment","e","key","like","setLike","isLiked","setIsLiked","users","setUsers","clickHandler","fetch","then","res","json","data","filter","u","id","userId","ProfilePicture","Username","date","desc","photo","fontSize","target"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport './post.css'\r\nimport PropTypes from 'prop-types'\r\nimport { Rating ,} from '@mui/material'\r\nimport { Avatar } from '@mui/material';\r\nimport {MoreVert} from '@mui/icons-material'\r\nimport SentimentVeryDissatisfiedIcon from '@mui/icons-material/SentimentVeryDissatisfied';\r\nimport SentimentDissatisfiedIcon from '@mui/icons-material/SentimentDissatisfied';\r\nimport SentimentSatisfiedIcon from '@mui/icons-material/SentimentSatisfied';\r\nimport SentimentSatisfiedAltIcon from '@mui/icons-material/SentimentSatisfiedAltOutlined';\r\nimport SentimentVerySatisfiedIcon from '@mui/icons-material/SentimentVerySatisfied';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport {Users} from '../../dummyData'\r\nimport { useState,useEffect } from 'react';\r\n\r\nfunction Post({post}) {\r\n    const box=document.getElementById(\"commentboxed\")\r\n    const [opencomment,setOpenComment]=useState(false)\r\n    const [comment,setComment] = useState(\"\")\r\n    const [loading,setLoading] = useState(true)\r\n    const customIcons = {\r\n        1: {\r\n          icon: <SentimentVeryDissatisfiedIcon />,\r\n          label: 'Very Dissatisfied',\r\n        },\r\n        2: {\r\n          icon: <SentimentDissatisfiedIcon />,\r\n          label: 'Dissatisfied',\r\n        },\r\n        3: {\r\n          icon: <SentimentSatisfiedIcon />,\r\n          label: 'Neutral',\r\n        },\r\n        4: {\r\n          icon: <SentimentSatisfiedAltIcon />,\r\n          label: 'Satisfied',\r\n        },\r\n        5: {\r\n          icon: <SentimentVerySatisfiedIcon />,\r\n          label: 'Very Satisfied',\r\n        },\r\n      };\r\n\r\n      function IconContainer(props){\r\n          const {value, ...others} = props \r\n          return <span { ...others}>{customIcons[value].icon}</span>\r\n      }\r\n\r\n      IconContainer.propTypes={\r\n        value: PropTypes.number.isRequired,\r\n      }\r\n\r\n      function commentBox(){\r\n          setOpenComment(!opencomment)\r\n       \r\n      }\r\n      function addComment(e){\r\n          if(e.key === 'Enter')\r\n          {\r\n              post.comment=post.comment+1;\r\n          }\r\n      }\r\n      \r\n\r\n    const [like, setLike] = useState(post.like)\r\n    const [isLiked,setIsLiked]=useState(false)\r\n    const [users,setUsers] = useState(null)\r\n\r\n    const clickHandler = () =>(\r\n\r\n        setLike(isLiked ? like - 1 : like + 1 ),\r\n        setIsLiked(!isLiked)\r\n    )\r\n    useEffect(() => {\r\n        fetch('https://backend-api.farzanvm.workers.dev/api/posts')\r\n        .then(res =>{\r\n            return  res.json();\r\n        })\r\n            .then(data =>{\r\n                setUsers(data);\r\n                setLoading(false);\r\n                \r\n            }\r\n            )\r\n    },[])\r\n    \r\n    if(loading) return <h1>Loading...</h1>\r\n\r\n    return (users &&\r\n        <div className=\"post\">\r\n            <div className=\"postWrapper\">\r\n                <div className=\"postTop\">\r\n                    <div className=\"postTopLeft\">\r\n                        <Avatar src={ users.Users.filter(u=>u.id===post.userId)[0]?.ProfilePicture}/>\r\n                        <span className=\"postUsername\">{users.Users.filter(u=>u.id===post.userId)[0]?.Username}</span>\r\n                        <span className=\"postTime\">{post.date}</span>\r\n                    </div>\r\n                    <div className=\"postTopRight\">\r\n                        <MoreVert/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"postCenter\">\r\n                    <span className=\"spaceText\">{post.desc}</span>\r\n                    <img className=\"postImg\" src={post.photo} alt=\"one_piece\"/>\r\n                </div>\r\n                <div className=\"postBottom\">\r\n                    <div className=\"postBottomLeft\">\r\n                        <img className=\"likeIcon\"  src=\"/assets/images/like.png\" onClick={clickHandler} alt=\"\"/>\r\n                        <img className=\"likeIcon\" src=\"/assets/images/heart.png\" onClick={clickHandler} alt=\"\"/>\r\n                        <span className=\"postlikeCounter\">{like} people liked</span>\r\n                        <button className=\"buttonComment\" onClick={commentBox}><span> Add comment</span></button>\r\n                                       \r\n                    </div>\r\n                    <div className=\"postIcons\">\r\n                    <Rating\r\n                        name=\"highlight-selected-only\"\r\n                        defaultValue={2}\r\n                        IconContainerComponent={IconContainer}\r\n                        sx={{ fontSize: 140 }}\r\n                        highlightSelectedOnly\r\n                            />\r\n                    </div>\r\n                    \r\n                    \r\n                    <div className=\"postBottomRight\">\r\n                        <span className=\"postCommentText\">{post.comment} comments</span>\r\n                    </div>\r\n                    \r\n                    \r\n                </div>\r\n                {opencomment && (<div id=\"commentboxed\" className=\"commentBox\">\r\n                        <Avatar src={ users.Users.filter(u=>u.id===1)[0]?.ProfilePicture}/>\r\n                        <span className=\"postUsername\">{users.Users.filter(u=>u.id===1)[0]?.Username}</span>\r\n                        <input type=\"text\" className=\"postCommentArea\"  value={comment} onChange={(e)=>setComment(e.target.value)} onKeyDown={(e)=>addComment(e)}></input>\r\n                        \r\n                        </div> )}  \r\n\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post\r\n"]},"metadata":{},"sourceType":"module"}